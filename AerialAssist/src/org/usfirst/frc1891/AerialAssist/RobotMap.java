// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1891.AerialAssist;
    
import edu.wpi.first.wpilibj.CANJaguar;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDController;
 import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.can.*;
import edu.wpi.first.wpilibj.smartdashboard.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANJaguar driveTrainMasterJag1;
    public static Encoder driveTrainQuadratureEncoder1;
    public static PIDController driveTrainPIDController1;
    public static CANJaguar driveTrainMasterJag2;
    public static Encoder driveTrainQuadratureEncoder2;
    public static PIDController driveTrainPIDController2;
    public static CANJaguar driveTrainSlaveJag1;
    public static CANJaguar driveTrainSlaveJag2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        try { 
            driveTrainMasterJag1 = new CANJaguar(8);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        driveTrainQuadratureEncoder1 = new Encoder(1, 1, 1, 2, false, EncodingType.k4X);
	LiveWindow.addSensor("DriveTrain", "Quadrature Encoder 1", driveTrainQuadratureEncoder1);
        driveTrainQuadratureEncoder1.setDistancePerPulse(1.0);
        driveTrainQuadratureEncoder1.setPIDSourceParameter(PIDSourceParameter.kRate);
        driveTrainQuadratureEncoder1.start();
        driveTrainPIDController1 = new PIDController(1.0, 0.0, 0.0, 0.0, driveTrainQuadratureEncoder1, driveTrainMasterJag1, 0.02);
	LiveWindow.addActuator("DriveTrain", "PIDController1", driveTrainPIDController1);
        driveTrainPIDController1.setContinuous(false); driveTrainPIDController1.setAbsoluteTolerance(0.2); 
        driveTrainPIDController1.setOutputRange(-1.0, 1.0);        

        try { 
            driveTrainMasterJag2 = new CANJaguar(9);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        driveTrainQuadratureEncoder2 = new Encoder(1, 3, 1, 4, false, EncodingType.k4X);
	LiveWindow.addSensor("DriveTrain", "Quadrature Encoder 2", driveTrainQuadratureEncoder2);
        driveTrainQuadratureEncoder2.setDistancePerPulse(1.0);
        driveTrainQuadratureEncoder2.setPIDSourceParameter(PIDSourceParameter.kRate);
        driveTrainQuadratureEncoder2.start();
        driveTrainPIDController2 = new PIDController(1.0, 0.0, 0.0, 0.0, driveTrainQuadratureEncoder2, driveTrainMasterJag2, 0.02);
	LiveWindow.addActuator("DriveTrain", "PID Controller 2", driveTrainPIDController2);
        driveTrainPIDController2.setContinuous(false); driveTrainPIDController2.setAbsoluteTolerance(0.2); 
        driveTrainPIDController2.setOutputRange(-1.0, 1.0);        

        try { 
            driveTrainSlaveJag1 = new CANJaguar(4);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        try { 
            driveTrainSlaveJag2 = new CANJaguar(7);
        } catch (CANTimeoutException ex) {
            ex.printStackTrace();
        }
	
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
